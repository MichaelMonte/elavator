import java.util.Scanner;

/*******************************************
 * ElevatorDriver.java
 * Micheol Monterroso
 * CIS117.7799.W17
 * 3/20/17
 * This Program is an elevator simulator that 
 * decides where to go based on user input and 
 * current floor.
 *******************************************/

public class ElevatorDriver {

	static Scanner input = new Scanner(System.in); //input for main
	static Elevator hilton  = new Elevator(); //object of class Elevator
	
	public static void main(String[] args) 
	{
		
		String option;
		
		hilton.prompt(); //gives users list of options
        while (true) //go through loop until user input q as command
        {   
            System.out.print("\nEnter command ==>  ");
            option = input.nextLine(); //take command from user
            switch (option) 
            {
                case "s":
                	hilton.selectFloor();
                    break;
                case "S":
                	hilton.selectFloor();//case control 
                    break;
                case "f":
                    hilton.fireAlarm();
                   break;
                case "F":
                    hilton.fireAlarm();
                   break;
                case "q":
                    System.exit(0);
                    break;
                case "Q":
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid selection. ");
                    break;
            }

        }
	}

}//end main
	
class Elevator
{
	
	Scanner stdIn = new Scanner(System.in);
	int floor;
	int previousFloor;
	
	//********************************************************************
	
	// This gives the user a list of commands to pick from.
	public void prompt()
	{
		System.out.println("           Welcome to Micheol's Elevator simulator");
		System.out.println("\nOptions: ");
        System.out.println("     s - Select a floor");
        System.out.println("     f - Fire alarm");
        System.out.println("     q - Quit");
        setPreviousFloor(1);
	}
	
	//********************************************************************
	
	// This method takes user input and runs it through the validate method
	
	public void selectFloor()
	{
		int floor;
		
		System.out.println("Enter the floor that you'd like to go to ==> ");
		if (!(stdIn.hasNextLine())){
			floor = stdIn.nextInt();
			validate(floor);//helper method	
		}
		else
		{
			System.out.println("Invalid - Must enter Number 1-100");
			
		}
		
	}// End selectFloor

	//********************************************************************
	
	// This method takes the user to the first floor / if user is already
	// on first floor it will let them know.
	
	public void fireAlarm()
	{
		System.out.println("Danger! You must exit the building now! ");		
		if (getPreviousFloor()>1 && getPreviousFloor()<100 )	
		{	
			System.out.print("Going Down..");
			for(int i=getPreviousFloor()-1; i>=1; i--)
			{
				  System.out.print(i + "..");
				  setPreviousFloor(i);
				  i = getPreviousFloor();
	              if(getPreviousFloor()==1)
	              {
	            	  System.out.println("Ding!");
	            	  setPreviousFloor(1);  	
	              }
			}
		}
		else 
		{
			System.out.println("You are already on 'Floor 1' ");
		}
		
		
	}//endfireAlarm

	private int getFloor() 
	{
		return floor;
	}
	private void setFloor(int floor) //externally hold floor levels
	{
		this.floor = floor;
	}
	private int getPreviousFloor() 
	{
		return previousFloor;
	}
	private void setPreviousFloor(int previousFloor) 
	{
		this.previousFloor = previousFloor;
	} 
	
	//********************************************************************
	
	// This method validates inputs from the user, and takes them to their floor.
	
	private void validate(int floor)
	{
		boolean keepGoing = false;
		while(!keepGoing)
		{
				if (floor<1)
				{
					System.out.println("Invalid floor selection - must be between 1 and 100.");
					System.out.print("\nEnter the floor that you'd like to go to ==> ");
					floor = stdIn.nextInt();
					selectFloor();
				}
				else if (floor>100)
				{
					System.out.println("Invalid floor selection - must be between 1 and 100.");
					System.out.print("\nEnter the floor that you'd like to go to ==> ");
					floor = stdIn.nextInt();
					selectFloor();
				}
				else
				{
					setFloor(floor);
					if (getFloor()>0 && (getPreviousFloor()<getFloor()))
					{
						System.out.print("Going up..");
						for(int i=getPreviousFloor()+1; i<=getFloor(); i++)
						{
							System.out.print(i + "..");
					        setPreviousFloor(i);
					        i = getPreviousFloor();
					        	if(getPreviousFloor()==getFloor())
					            {
					        		System.out.println("Ding!");
					        		setPreviousFloor(getFloor());
					        		keepGoing = true;
					             }
						}
					}
					else if (getPreviousFloor()>getFloor())
					{	
						System.out.print("Going down..");
						for(int i=getPreviousFloor()-1; i>=getFloor(); i--)
						{
							System.out.print(i + "..");
							setPreviousFloor(i);
							i = getPreviousFloor();
								if(getPreviousFloor()==getFloor())
					            {
									System.out.println("Ding!");
									setPreviousFloor(getFloor());
									keepGoing = true;
					            }
						}
					}
				}
		}//end while
	}//end helper method
	
 }//end Elevator
